{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEzB,OACC,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,+BAAKF,EAAL,OACA,kCAAKC,EAAL,cCUWK,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACC,8BACAA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACK,cAAC,EAAD,CACAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHNS,SCMHC,EAZE,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACA,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCMII,G,MAbA,SAACC,GACb,OACG,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,aCuCCC,E,kDArCd,aAAe,IAAD,8BACb,gBAaAC,eAAiB,SAACC,GACnB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAbxC,EAAKC,MAAO,CACXvB,OAAQ,GACRK,YAAa,IAJD,E,gEAQO,IAAD,OACpBmB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAAEpB,OAAQ4B,S,+BAO7B,IAAD,EACyBC,KAAKN,MAA5BvB,EADF,EACEA,OAAQK,EADV,EACUA,YACZyB,EAAgB9B,EAAO+B,QAAO,SAAAC,GACnC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEhD,OAAQjC,EAAOmC,OAGhB,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,SANtB,+C,GAzBYM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACT,cAAC,EAAD,IAEGC,SAASC,eAAe,SAO3BX,M","file":"static/js/main.2304be26.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n\t\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t  <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t  <div>\r\n\t\t  <h2>{name} </h2>\r\n\t\t  <p> {email} </p>\r\n\t\t  </div>\r\n\t\t  </div>\r\n          );\r\n}\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card' \r\n\r\nconst CardList = ({ robots }) => { \r\nreturn(\r\n\t<div>{\r\n\trobots.map((user, i) => {\r\n\t\treturn (\r\n\t\t\t    <Card key={i} \r\n\t\t\t    id={robots[i].id} \r\n\t\t\t    name={robots[i].name} \r\n\t\t\t    email={robots[i].email}/>\r\n\t\t\t   );\r\n\t})\r\n    }\r\n\t</div>\r\n\t);\r\n\t} \r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox= ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t<div className='pa2'>\t\r\n\t<input \r\n\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\ttype='search' \r\n\tplaceholder='search robots' \r\n\tonChange={searchChange}\r\n\t/>\r\n\t</div> \r\n\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n   return (\r\n   \t  <div style={{ overflowY: 'scroll', border: '5px solid black', height: '500px' }}>\r\n   \t   {props.children}\r\n\r\n   \t  </div>\r\n   \t)\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state= {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t .then(response=> response.json())\r\n\t .then(users=> this.setState({ robots: users}));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n\tthis.setState({searchfield: event.target.value})\t\r\n  }\r\n\r\n  render(){\r\n  \t const { robots, searchfield} = this.state;\r\n\t const filteredRobots= robots.filter(robot =>{\r\n\t\t return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n        return !robots.length ?\r\n    \t <h1> Loading </h1> :\r\n\t\t  (\r\n\t\t     <div className='tc'>\r\n\t\t      <h1 className='f2'>RoboFriends</h1>\r\n\t\t      <SearchBox searchChange={this.onSearchChange}/>\r\n\t\t      <Scroll>\r\n\t\t        <CardList robots={filteredRobots}/>\r\n\t\t      </Scroll>\r\n\t\t     </div> \r\n\t\t  );\r\n        \r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from'./containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n<App />\n\n , document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}